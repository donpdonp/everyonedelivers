<% if @delivery.start_location && @delivery.end_location %>
<script>
  function mapinitialize() {

    var start, end, sw, ne;
    start = new google.maps.LatLng(<%= @delivery.start_location.latitude %>,<%= @delivery.start_location.longitude %>);
    end = new google.maps.LatLng(<%= @delivery.end_location.latitude %>,<%= @delivery.end_location.longitude %>);
    var bounds = new google.maps.LatLngBounds();
    bounds.extend(start);
    bounds.extend(end);

    var map = new google.maps.Map(document.getElementById("gmap"),
                                  {mapTypeId: google.maps.MapTypeId.ROADMAP,
                                   center: bounds.getCenter(),
                                   zoom: 12});
    // this could be avoided if the zoom level could be calculated
    map.fitBounds(bounds);

    var marker_start = new google.maps.Marker({position:start});
    marker_start.setMap(map);
    var marker_end = new google.maps.Marker({position:end});
    marker_end.setMap(map);
     

    var directions = new google.maps.DirectionsService();
    var request = { origin : start,
                    destination : end,
                    travelMode : google.maps.DirectionsTravelMode.DRIVING,
                    unitSystem: <%= "google.maps.UnitSystem."+ 
                                    (current_user.display_measurement == "imperial" ? "IMPERIAL" : "METRIC") %> };
    directions.route(request, show_directions_callback_builder(map));
  }

  function show_directions_callback_builder(map) {
    // use a closure to make map a local variable
    return function show_directions(result, status) {
      if(status == "NOT_FOUND") {
        $('#gmaperror').html("Route not found");
      }
      if(status == "OK") {
        renderer = new google.maps.DirectionsRenderer({directions: result,
                                                       suppressMarkers : true});
        renderer.setMap(map);
        $('#travel_distance').html(result.routes[0].legs[0].distance.text)
      }
    }
  }

  google.maps.event.addDomListener(window, 'load', mapinitialize);
</script>
<% end %>

<div class="deliverydetail">
  
  <h3 class="packagename">
   Delivery #<%= @delivery.id %> 
   <% if @delivery.package %>
     <%=h @delivery.package.description %>
   <% end %>
   <% if @delivery.available_for_edit_by(current_user) %>
    (<%= link_to "edit", edit_delivery_path(@delivery) %>)
   <% end %>
  </h3>

  <div class="info">
    <h4>Status</h4>
    <p>
      <% if @delivery.delivering_user %>
        Delivery accepted by: <%= link_to_user @delivery.delivering_user %>
      <% else %>
        <% if @delivery.waiting? %>
          Available for delivery.
        <% else %>
          Unfinished
        <% end %>
      <% end %>
      <br/>

      Listed by: <%= link_to_user @delivery.listing_user %>  <br/>

      Listed at: <%= @delivery.created_at.strftime("%l:%M%P %Z %d-%b-%Y") %>  <br/>
    </p>
  </div>

  <div class="info">
    <h4>Package</h4>
    <% if @delivery.package %>
    <p>
     Description: &quot;<%=h @delivery.package.description %>&quot;
     <br/>
     <% if @delivery.package.has_dimensions? %>
       Height: <%= @delivery.package.height %>"
       Width: <%= @delivery.package.width %>"
       Depth: <%= @delivery.package.depth %>"
     <% end %>
    </p>
    <% else %>
    <p>
      no package has been specified
    </p>
    <% end %>
  </div>

  <div class="info">
    <h4>Price and Bounty</h4>
    <p>
     Retail price: $<%= @delivery.package.display_price %> <br/>
     <% if @delivery.fee %>
      Bounty: $<%= @delivery.fee.display_price %> <br/>
      Payment method: <%= @delivery.fee.payment_method %> <br/>
      <br/>
     <% else %>
       no delivery fee has been specified
     <% end %>
    </p>
  </div>

  <div style="clear:left">
  </div>

  <div class="map">
    <% if @delivery.start_location && @delivery.end_location %>
     <div id="gmap" style="width:400px;height:260px"></div>
     <div id="gmaperror"></div>
    <% end %>
  </div>

  <div class="addressparts">
  <div >
    <h4>From</h4>
    <p>
     <% if @delivery.start_location %>
      <strong><%= @delivery.start_location.name %></strong> <br/>
      <%= @delivery.start_location.street %>
     <% else %>
      no start location has been specified
     <% end %>
    </p>
  </div>

  <div>
    <h4>To</h4>
    <p>
     <% if @delivery.end_location %>
      <strong><%= @delivery.end_location.name %></strong><br/>
      <%= @delivery.end_location.street %>
     <% else %>
      no end location has been specified
     <% end %>
    </p>
  </div>

  <div >
    <% if @delivery.start_end_distance && @delivery.start_end_distance > 0 %>
    <h4>Distance</h4>
    <p>
      Travel distance: <span id="travel_distance"></span>
    </p>
    <% end %>
  </div>

  <div>
    <h4> Time </h4>
     <% if @delivery.fee %>
      Due Date: <%= @delivery.fee.delivery_due.strftime("%l:%M%P %Z %d-%b-%Y") %> <br/>
      <% if @delivery.fee.delivery_due >= Time.now %>
        Due In: <%= distance_of_time_in_words_to_now(@delivery.fee.delivery_due) %>
      <% else %>
        Overdue by: <%= distance_of_time_in_words_to_now(@delivery.fee.delivery_due) %>
      <% end %>
     <% end %>
  </div>

  <% if @delivery.available_for_delivery_by(current_user) %>
     <%= form_for @delivery, :url => confirm_delivery_path(@delivery),  :html => {:method => :put} do |f| %>
      <%= f.submit 'I can make this delivery' %>
     <% end %>
  <% end %>

  </div>

  <% if @delivery.comments.size > 0 %>
  <div class="comments">
    <ul>
    <% @delivery.comments.each do |comment| %>
      <li> <%= comment.text %> </li>
    <% end %>
    </ul>
  </div>
  <% end %>
</div>
